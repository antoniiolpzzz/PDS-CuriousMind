package com.pds.curiousmind.model.course;

import com.pds.curiousmind.model.contentblock.ContentBlock;
import com.pds.curiousmind.model.strategy.StrategyType;
import jakarta.persistence.*;

import java.util.*;

/**
 * Represents a course, which is a collection of content blocks, strategies, and metadata.
 * <p>
 * Each course has a unique identifier, a name, a description, an image URL, a set of available learning strategies,
 * and a list of content blocks. The class is mapped to the "courses" table in the database using JPA annotations.
 * <ul>
 *   <li><b>id</b>: Primary key, auto-generated by the database.</li>
 *   <li><b>name</b>: Name of the course. Cannot be null.</li>
 *   <li><b>description</b>: Optional description of the course.</li>
 *   <li><b>imageURL</b>: URL to an image representing the course.</li>
 *   <li><b>availableStrategies</b>: Set of learning strategies available for this course. Cannot be null.</li>
 *   <li><b>contentBlocks</b>: List of content blocks that make up the course. Cannot be null.</li>
 * </ul>
 *
 * <p>Typical usage:</p>
 * <pre>
 *     Course course = new Course("German Basics", "Learn German from scratch", "german.png", strategies, contentBlocks);
 * </pre>
 *
 * @author Antonio
 * @since 1.0
 */
@NamedEntityGraph(
    name = "Course.fullGraph",
    attributeNodes = {
        @NamedAttributeNode(value = "contentBlocks", subgraph = "contentBlockGraph")
    },
    subgraphs = {
        @NamedSubgraph(
            name = "contentBlockGraph",
            attributeNodes = {
                @NamedAttributeNode(value = "questions", subgraph = "questionGraph")
            }
        ),
        @NamedSubgraph(
            name = "questionGraph",
            attributeNodes = {
                @NamedAttributeNode("options")
            }
        )
    }
)
@Entity
@Table(name = "courses")
public class Course {
    /**
     * The unique identifier for this course.
     * <p>
     * This field is the primary key and is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Name of the course.
     * <p>
     * This field is mandatory and cannot be null.
     */
    @Column(name = "name", nullable = false)
    private String name;

    /**
     * Optional description of the course.
     */
    @Column(name = "description")
    private String description;

    /**
     * URL to an image representing the course.
     */
    @Column(name = "image_url")
    private String imageURL;

    /**
     * Set of learning strategies available for this course.
     * <p>
     * This field is mandatory and cannot be null.
     * The strategies are stored in a separate table and fetched eagerly.
     */
    @ElementCollection(fetch = FetchType.EAGER)
    @Enumerated(EnumType.ORDINAL)
    @Column(name = "available_strategy", nullable = false)
    @CollectionTable(name = "course_strategies", joinColumns = @JoinColumn(name = "course_id"))
    private Set<StrategyType> availableStrategies = new HashSet<>();

    /**
     * List of content blocks that make up the course.
     * <p>
     * This field is mandatory and cannot be null.
     * The content blocks are fetched eagerly and are orphaned if removed.
     */
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, orphanRemoval = true)
    @JoinColumn(name = "course_id", nullable = false)
    private List<ContentBlock> contentBlocks = new ArrayList<>();

    // CONSTRUCTORS
    /**
     * Default constructor for JPA.
     */
    public Course() {
    }

    /**
     * Constructs a course with the specified name, description, image URL, strategies, and content blocks.
     * Makes defensive copies of the provided collections.
     *
     * @param name the name of the course
     * @param description the description of the course
     * @param imageURL the image URL for the course
     * @param strategies the list of available strategies
     * @param contentBlocks the list of content blocks
     */
    public Course(String name, String description, String imageURL, List<StrategyType> strategies, List<ContentBlock> contentBlocks) {
        this.name = name;
        this.description = description;
        this.imageURL = imageURL;
        this.availableStrategies = new HashSet<>(strategies);
        this.contentBlocks = new ArrayList<>(contentBlocks);
    }

    /**
     * Constructs a course with the specified name, image URL, strategies, and content blocks.
     * The description is set to null.
     *
     * @param name the name of the course
     * @param imageURL the image URL for the course
     * @param strategies the list of available strategies
     * @param contentBlocks the list of content blocks
     */
    public Course(String name, String imageURL, List<StrategyType> strategies, List<ContentBlock> contentBlocks) {
        this(name, null, imageURL, strategies, contentBlocks);
    }

    // GETTERS
    /**
     * Returns the unique identifier of this course.
     *
     * @return the id of the course
     */
    public Long getId() {
        return id;
    }

    /**
     * Returns the name of this course.
     *
     * @return the name of the course
     */
    public String getName() {
        return name;
    }

    /**
     * Returns the description of this course.
     *
     * @return the description of the course
     */
    public String getDescription() {
        return description;
    }

    /**
     * Returns the image URL of this course.
     *
     * @return the image URL
     */
    public String getImageURL() {
        return imageURL;
    }

    /**
     * Returns an unmodifiable list of content blocks in this course.
     *
     * @return the list of content blocks
     */
    public List<ContentBlock> getContentBlocks() {
        return Collections.unmodifiableList(contentBlocks);
    }

    /**
     * Returns an unmodifiable set of available strategies for this course.
     *
     * @return the set of available strategies
     */
    public Set<StrategyType> getAvailableStrategies() {
        return Collections.unmodifiableSet(availableStrategies);
    }

    // SETTERS
    /**
     * Sets the unique identifier for this course.
     *
     * @param id the id to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Sets the name of this course.
     *
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Sets the description of this course.
     *
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Sets the image URL for this course.
     *
     * @param imageURL the image URL to set
     */
    public void setImageURL(String imageURL) {
        this.imageURL = imageURL;
    }

    /**
     * Sets the list of content blocks for this course.
     *
     * @param contentBlocks the list of content blocks to set
     */
    public void setContentBlocks(List<ContentBlock> contentBlocks) {
        this.contentBlocks = new ArrayList<>(contentBlocks);
    }

    /**
     * Sets the set of available strategies for this course.
     *
     * @param availableStrategies the set of available strategies to set
     */
    public void setAvailableStrategies(Set<StrategyType> availableStrategies) {
        this.availableStrategies = new HashSet<>(availableStrategies);
    }
}